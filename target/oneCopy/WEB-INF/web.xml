<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>

    <!--context-param 元素用来设定web应用的环境参数(context),它包含两个子元素
    context-param，它用于向 ServletContext 提供键值对，即应用程序上下文信息

    可以在servlet中用 getServletContext().getInitParameter("namespace") 来取得
    -->
    <context-param>
      <param-name>namespace</param-name>
      <param-value>value</param-value>
    </context-param>


    <!--filter元素用来设定web应用的过滤器，它的两个主要子元素filter-name和filter-class用来定义Filter所对应的class-->
    <filter>
      <!--这当然就是指定filter的名字-->
      <filter-name>CharacterEncoding</filter-name>
      <!--这是用来定义filter的类的名称-->
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
      <init-param>
        <!--用来指定参数的名称-->
        <param-name>encoding</param-name>
        <!--用来设定参数值-->
        <param-value>UTF-8</param-value>
      </init-param>

      <!--用来定义参数-->
      <init-param>
        <!--用来指定参数的名称-->
        <param-name>forceEncoding</param-name>
        <!--用来设定参数值-->
        <param-value>true</param-value>
      </init-param>
    </filter>

    <!--两个主要子元素filter-name和url-pattern.用来定义Filter所对应的URL-->
    <filter-mapping>
      <filter-name>CharacterEncoding</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--配置DispatcherServlet
    servlet元素的两个主要子元素servlet-name和servlet-class用来定义servlet所对应的clas
    -->
    <servlet>
      <servlet-name>oneCopy</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:springConfig.xml,classpath:springmvc.xml</param-value>
      </init-param>

      <!--Load-on-startup
  元素在web应用启动的时候指定了servlet被加载的顺序，它的值必须是一个整数。如果它的值是一个
  负整数或是这个元素不存在，那么容器会在该servlet被调用的时候，加载这个servlet 。如果值是正整数或零，容器在配置的时候
  就加载并初始化这个servlet，容器必须保证值小的先被加载。如果值相等，容器可以自动选择先加载谁

  在servlet的配置当中，<load-on-startup>5</load-on-startup>的含义是：

  标记容器是否在启动的时候就加载这个servlet。

  当值为0或者大于0时，表示容器在应用启动时就加载这个servlet；

  当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载。

  正数的值越小，启动该servlet的优先级越高

  -->
      <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
      <servlet-name>oneCopy</servlet-name>
      <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
