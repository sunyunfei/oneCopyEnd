<<<<<<< Updated upstream
<?xml version="1.0" encoding="UTF-8"?>
=======
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--数据库配置文件导入-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--dataSource数据库配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--数据库配置基本属性-->
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <!--#连接池的最大数据库连接数。设为0表示无限制-->
        <property name="maxActive" value="20"></property>

        <!--初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时-->
        <property name="initialSize" value="1"></property>

        <!--最大建立连接等待时间。如果超过此时间将接到异常。设为-1.表示无限制获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
如果需要可以通过配置useUnfairLock属性为true使用非公平锁。-->
        <property name="maxWait" value="6000"></property>

        <!--最小连接池数量 -->
        <property name="minIdle" value="1"></property>
    </bean>


    <!--sqlSessionFactory 配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.bs.pojo"></property>
        <property name="configLocation" value="classpath:mybaties.xml"></property>
        <property name="mapperLocations" value="classpath:mappers/HomeMapper.xml"></property>
    </bean>


    <!--配置扫描Dao接口包,动态实现Dao接口,注入spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

        <!--basePackage 属性是让你为映射器接口文件设置基本的包路径-->
        <property name="basePackage" value="com.bs.dao"></property>

    </bean>

    <!--扫描service包-->
    <context:component-scan base-package="com.bs.service"></context:component-scan>

    <!--配置事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


</beans>
>>>>>>> Stashed changes
